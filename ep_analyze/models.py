from django.db import models

# Table with files statistics
class FileStat(models.Model):
    """
    Maps file generated by linux command like:
    $ find . -exec stat -c "%F %s %X %Y %n" {} \; > file
    """

    server_name = models.CharField(max_length=80)
    server_addr = models.CharField(max_length=80)

    # 0=directory 1=file %F  file type
    is_file = models.BooleanField()

    # %s total size, in bytes
    size = models.BigIntegerField()

    # %X time of last access, seconds since Epoch
    acc_time = models.BigIntegerField()

    # %Y time of last data modification, seconds since Epoch
    mod_time = models.BigIntegerField()

    # parent directory path; begins with '/' or './', ends with '*/parent_dir/'
    parent_dir_path = models.CharField(max_length=1000)

    # name with extension (suffix)
    name = models.CharField(max_length=1000)

    # only extension (suffix)
    extension = models.CharField(max_length=10)

    # time of record in db (timestamp)
    rec_timestamp = models.DateTimeField(auto_now_add=True)

    # time of update (with Model.save())
    update_time = models.DateTimeField(auto_now=True)

    # exits flag (if not exits then is deleted or moved)
    exists = models.BooleanField(default=True)
    exists_check_time = models.DateTimeField(auto_now=True)

    def __str__(self):
       return str(self.__dict__)
        # return str((self.get_deferred_fields()))

    
class FilesRelatives(models.Model):
    """
    Files that are identical or very close by size or name.
    """

    file_id = models.ForeignKey(FileStat,
        related_name='file_id',
        on_delete=models.CASCADE)

    # id of file from FileStat to which is related
    close_match_id = models.ForeignKey(FileStat,
        related_name='close_math_id',
        on_delete=models.CASCADE)

    # 0 means they are identical by size or by name
    # identical py extension is assumed
    by_size = models.IntegerField()
    by_name = models.IntegerField()

    class Meta:
        unique_together = ('file_id', 'close_match_id')

